
variable "ansible_config" {
  type    = string
  default = "${env("image_factory__ansible_config")}"
}

variable "ansible_playbook_dir" {
  type    = string
  default = "${env("image_factory__ansible_playbook_dir")}"
}

variable "build_directory" {
  type    = string
  default = "../../builds"
}

variable "description" {
  type    = string
  default = "CentOS 8.1 - crafted by [Mantoso](https://mantoso.com) using [Image Factory](https://github.com/mantoso/mantoso-image-factory)."
}

variable "disk_size" {
  type    = string
  default = "${env("image_factory__disk_size")}"
}

variable "http_directory" {
  type    = string
  default = "./http"
}

variable "iso_checksum" {
  type    = string
  default = "${env("image_factory__iso_8_1_checksum")}"
}

variable "iso_checksum_type" {
  type    = string
  default = "${env("image_factory__iso_8_1_checksum_type")}"
}

variable "iso_name" {
  type    = string
  default = "${env("image_factory__iso_8_1_filename_centos")}"
}

variable "iso_url" {
  type    = string
  default = "${env("image_factory__iso_8_1_url_centos")}"
}

variable "os" {
  type    = string
  default = "centos"
}

variable "os_version_full" {
  type    = string
  default = "8.1.1911"
}

variable "os_version_major" {
  type    = string
  default = "8"
}

variable "os_version_minor" {
  type    = string
  default = "1"
}

variable "proxmox_host" {
  type    = string
  default = "${env("image_factory__proxmox_host")}"
}

variable "proxmox_iso_storage_pool" {
  type    = string
  default = "${env("image_factory__proxmox_iso_storage_pool")}"
}

variable "proxmox_node" {
  type    = string
  default = "${env("image_factory__proxmox_node")}"
}

variable "proxmox_password" {
  type      = string
  default   = "${env("image_factory__proxmox_password")}"
  sensitive = true
}

variable "proxmox_port" {
  type    = string
  default = "${env("image_factory__proxmox_port")}"
}

variable "proxmox_storage_pool" {
  type    = string
  default = "${env("image_factory__proxmox_storage_pool")}"
}

variable "proxmox_storage_pool_type" {
  type    = string
  default = "${env("image_factory__proxmox_storage_pool_type")}"
}

variable "proxmox_url" {
  type    = string
  default = "https://${env("image_factory__proxmox_host")}:${env("image_factory__proxmox_port")}/api2/json"
}

variable "proxmox_username" {
  type    = string
  default = "${env("image_factory__proxmox_username")}"
}

variable "proxmox_vmid" {
  type    = string
  default = "${env("image_factory__proxmox_vmid")}"
}

variable "ssh_password" {
  type      = string
  default   = "${env("image_factory__ssh_password")}"
  sensitive = true
}

variable "ssh_username" {
  type    = string
  default = "${env("image_factory__ssh_username")}"
}

variable "vagrant_org" {
  type    = string
  default = "${env("image_factory__vagrant_org")}"
}

variable "virtualbox__iso_guest_additions_url" {
  type    = string
  default = ""
}

variable "virtualbox_iso_headless" {
  type    = string
  default = "false"
}

variable "vm_memory" {
  type    = string
  default = "${env("image_factory__vm_memory")}"
}

locals {
  iso_path = "../../iso/${var.os}"
  vm_name  = "${var.os}-${var.os_version_full}"
}

source "proxmox" "autogenerated_1" {
  boot_command = ["<tab> linux ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.os_version_major}/ks-${var.os_version_full}.cfg vga=791<enter><wait>"]
  boot_wait    = "10s"
  cores        = "2"
  disks {
    disk_size         = "${var.disk_size}G"
    format            = "qcow2"
    storage_pool      = "${var.proxmox_storage_pool}"
    storage_pool_type = "${var.proxmox_storage_pool_type}"
    type              = "virtio"
  }
  http_directory           = "${var.http_directory}"
  insecure_skip_tls_verify = true
  iso_checksum             = "${var.iso_checksum}"
  iso_checksum_type        = "${var.iso_checksum_type}"
  iso_storage_pool         = "${var.proxmox_storage_pool}"
  iso_url                  = "${var.iso_url}/${var.iso_name}"
  memory                   = "${var.vm_memory}"
  network_adapters {
    bridge = "vmbr0"
    model  = "virtio"
  }
  node                 = "${var.proxmox_node}"
  os                   = "l26"
  password             = "${var.proxmox_password}"
  proxmox_url          = "${var.proxmox_url}"
  qemu_agent           = true
  ssh_password         = "${var.ssh_password}"
  ssh_timeout          = "30m"
  ssh_username         = "${var.ssh_username}"
  template_description = "${var.description}"
  template_name        = "${local.vm_name}"
  unmount_iso          = true
  username             = "${var.proxmox_username}"
  vm_id                = "${var.proxmox_vmid}"
  vm_name              = "${local.vm_name}"
}

source "virtualbox-iso" "vagrant-cloud" {
  boot_command             = ["<tab> linux ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.os_version_major}/ks-${var.os_version_full}.cfg vga=791<enter><wait>"]
  boot_wait                = "10s"
  cpus                     = "2"
  disk_size                = "65536"
  guest_additions_mode     = "disable"
  guest_additions_path     = "VBoxGuestAdditions_{{ .Version }}.iso"
  guest_additions_url      = "${var.virtualbox_iso_guest_additions_url}"
  guest_os_type            = "RedHat_64"
  hard_drive_discard       = true
  hard_drive_interface     = "sata"
  hard_drive_nonrotational = true
  headless                 = "${var.virtualbox_iso_headless}"
  http_directory           = "${var.http_directory}"
  iso_checksum             = "${var.iso_checksum}"
  iso_checksum_type        = "${var.iso_checksum_type}"
  iso_urls                 = ["${local.iso_path}/${var.iso_name}", "${var.iso_url}/${var.iso_name}"]
  memory                   = "${var.vm_memory}"
  output_directory         = "${var.build_directory}/${var.os}/${local.vm_name}"
  shutdown_command         = "echo '${var.ssh_username}' | sudo -S /sbin/halt -h -p"
  ssh_agent_auth           = false
  ssh_password             = "${var.ssh_password}"
  ssh_port                 = 22
  ssh_username             = "${var.ssh_username}"
  ssh_wait_timeout         = "10000s"
  virtualbox_version_file  = ".vbox_version"
  vm_name                  = "${local.vm_name}"
}

source "virtualbox-iso" "virtualbox-aws-ami" {
  boot_command             = ["<tab> linux ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.os_version_major}/ks-${var.os_version_full}.cfg vga=791<enter><wait>"]
  boot_wait                = "10s"
  cpus                     = "2"
  disk_size                = "65536"
  guest_additions_mode     = "disable"
  guest_additions_path     = "VBoxGuestAdditions_{{ .Version }}.iso"
  guest_additions_url      = "${var.virtualbox_iso_guest_additions_url}"
  guest_os_type            = "RedHat_64"
  hard_drive_discard       = true
  hard_drive_interface     = "sata"
  hard_drive_nonrotational = true
  headless                 = "${var.virtualbox_iso_headless}"
  http_directory           = "${var.http_directory}"
  iso_checksum             = "${var.iso_checksum}"
  iso_checksum_type        = "${var.iso_checksum_type}"
  iso_urls                 = ["${local.iso_path}/${var.iso_name}", "${var.iso_url}/${var.iso_name}"]
  memory                   = "${var.vm_memory}"
  output_directory         = "${var.build_directory}/${var.os}/${local.vm_name}"
  shutdown_command         = "echo '${var.ssh_username}' | sudo -S /sbin/halt -h -p"
  ssh_password             = "${var.ssh_password}"
  ssh_port                 = 22
  ssh_username             = "${var.ssh_username}"
  ssh_wait_timeout         = "10000s"
  virtualbox_version_file  = ".vbox_version"
  vm_name                  = "${local.vm_name}"
}

build {
  sources = ["source.proxmox.autogenerated_1", "source.virtualbox-iso.vagrant-cloud", "source.virtualbox-iso.virtualbox-aws-ami"]

  provisioner "ansible" {
    ansible_env_vars = ["ANSIBLE_SSH_ARGS=-o AddKeysToAgent=no -o IdentitiesOnly=yes", "ansible_become_password=${var.ssh_password}", "ansible_config=${var.ansible_config}", "ansible_force_color=True", "ansible_password=${var.ssh_password}"]
    extra_arguments  = ["-v", "-e", "ansible_python_interpreter=/usr/bin/python3"]
    only             = ["proxmox"]
    playbook_file    = "${var.ansible_playbook_dir}/playbook-proxmox.yml"
    user             = "${var.ssh_username}"
  }

  provisioner "ansible" {
    ansible_env_vars = ["ANSIBLE_SSH_ARGS=-o AddKeysToAgent=no -o IdentitiesOnly=yes", "ansible_become_password=${var.ssh_password}", "ansible_config=${var.ansible_config}", "ansible_force_color=True", "ansible_password=${var.ssh_password}"]
    extra_arguments  = ["-v", "-e", "ansible_python_interpreter=/usr/bin/python3"]
    only             = ["vagrant-cloud"]
    playbook_file    = "${var.ansible_playbook_dir}/playbook-vagrant-cloud.yml"
    user             = "${var.ssh_username}"
  }

  post-processors {
    post-processor "vagrant" {
      keep_input_artifact  = true
      only                 = ["vagrant-cloud"]
      output               = "../../box/<no value>/${var.os}/${local.vm_name}.box"
      vagrantfile_template = "${var.vagrantfile_template}"
    }
    post-processor "vagrant-cloud" {
      access_token        = "${var.vagrant_cloud_token}"
      box_tag             = "${var.vagrant_org}/${var.os}-${var.os_version_major}"
      only                = ["vagrant-cloud"]
      version             = "${var.os_version_full}"
      version_description = "${var.description}"
    }
  }
  post-processor "shell-local" {
    inline = ["ssh root@${var.proxmox_host} qm set ${var.proxmox_vmid} --scsihw virtio-scsi-pci --serial0 socket --vga serial0"]
    only   = ["proxmox"]
  }
}
